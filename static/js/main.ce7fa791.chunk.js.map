{"version":3,"sources":["styles/Shell.module.css","components/Header.js","components/TableOfContents.js","components/contents/Section.js","components/contents/Heading.js","components/contents/Table.js","components/contents/Code.js","components/contents/Tree.js","processor/markdownProcessor.js","components/Container.js","App.js","serviceWorker.js","index.js","styles/Contents.module.css"],"names":["module","exports","Header","className","styles","header","Item","data","onClick","name","TableOfContents","owner","repo","branch","setCurrent","useState","contents","setContents","useEffect","fetch","then","response","json","tableOfContents","map","item","key","sha","path","depth","children","React","createElement","components","tableRow","node","align","renderChild","isHead","index","tableCell","tag","TableComponent","type","Table","head","tail","child","Code","language","codeString","style","solarizedlight","root","Fragment","renderChildNodes","section","Section","heading","Heading","text","value","paragraph","ruby","base","break","table","code","lang","inlineCode","Tree","console","log","unified","use","parse","remarkAozoraRuby","remarkBreaks","sectionize","freeze","Container","filepath","raw","setRaw","setNode","processor","run","container","initialPath","App","render","history","push","match","params","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ce7fa791.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Shell_header__1vajR\",\"tableOfContents\":\"Shell_tableOfContents__kmQbm\",\"container\":\"Shell_container__lWg86\"};","import React from 'react'\nimport styles from '../styles/Shell.module.css'\n\nconst Header = () => (\n  <header className={styles.header}>アプリだよ</header>\n)\n\nexport default Header","import React, { useState, useEffect } from 'react'\nimport styles from '../styles/Shell.module.css'\n\n// /repos/:owner/:repo/contents/:path\n\nconst base = 'https://api.github.com'\n\nconst Item = ({data, onClick}) => {\n  return <div onClick={onClick}><p>{data.name}</p></div>\n}\n\nconst TableOfContents = ({owner, repo, branch, setCurrent}) => {\n  const [contents, setContents] = useState([])\n  useEffect(() => {\n    fetch(base + `/repos/${owner}/${repo}/contents?ref=${branch}`)\n      .then(response => response.json())\n      .then(data => setContents(data))\n  }, [owner, repo, branch])\n\n  return <div className={styles.tableOfContents}>{contents.map(item => <Item key={item.sha} data={item} onClick={() => setCurrent(item.path)} />)}</div>\n}\n\nexport default TableOfContents","import React from 'react'\nimport styles from '../../styles/Contents.module.css'\n\nexport default ({depth, children}) => <section className={styles[`section${depth}`]}>{children}</section>\n","import React from 'react'\nimport styles from '../../styles/Contents.module.css'\n\nexport default ({depth, children}) => React.createElement(`h${depth}`, { className: styles[`heading${depth}`] }, children)\n","import React from 'react'\nimport styles from '../../styles/Contents.module.css'\n\nconst components = {\n  tableRow: ({ node: { children }, align, renderChild, isHead, key }) => {\n    return (\n      <tr key={key}>\n        {children.map((node, index) => (\n          <TableComponent\n            node={node}\n            align={align[index]}\n            isHead={isHead}\n            renderChild={renderChild}\n            key={`${index}`}\n          />\n        ))}\n      </tr>\n    )\n  },\n  tableCell: ({ node: { children }, align, renderChild, isHead }) => {\n    const tag = isHead ? 'th' : 'td'\n    return React.createElement(\n      tag,\n      { className: styles[`table-cell-${align}`] },\n      children.map((node, index) => (\n        <TableComponent\n          node={node}\n          renderChild={renderChild}\n          key={`${index}`}\n        />\n      ))\n    )\n  }\n}\n\nconst TableComponent = ({ node, align, isHead, renderChild }) => {\n  const { type } = node\n  return React.createElement(\n    components[type] || renderChild,\n    { node, align, isHead, renderChild }\n  )\n}\n\nconst Table = ({ node, renderChild }) => {\n  const { align, children } = node\n  const [head, ...tail] = children\n  return (\n    <table>\n      <thead>\n        <TableComponent\n          node={head}\n          isHead\n          align={align}\n          renderChild={renderChild}\n        />\n      </thead>\n      <tbody>\n        {tail.map((child, index) =>\n          <TableComponent\n            node={child}\n            align={align}\n            renderChild={renderChild}\n            key={`${index}`}\n          />\n        )}\n      </tbody>\n    </table>\n  )\n}\n\nexport default Table\n","import React from 'react'\nimport { Prism as SyntaxHighlighter} from 'react-syntax-highlighter';\nimport { solarizedlight } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nimport styles from '../../styles/Contents.module.css'\n\nconst Code = ({language, codeString}) => {\n  return (\n    <div className={styles['codeblock-container']} >\n      <SyntaxHighlighter language={language} style={solarizedlight}>\n        {codeString}\n      </SyntaxHighlighter>\n    </div>\n  );\n};\n\nexport default Code;","import React from 'react'\nimport Section from './Section'\nimport Heading from './Heading'\nimport Table from './Table'\nimport Code from './Code'\nimport styles from '../../styles/Contents.module.css';\n\nconst components = {\n  root: ({ node: { children } }) => (\n    <React.Fragment>{renderChildNodes(children)}</React.Fragment>\n  ),\n  section: ({ node: { depth, children } }) => (\n    <Section depth={depth}>{renderChildNodes(children)}</Section>\n  ),\n  heading: ({ node: { depth, children } }) => (\n    <Heading depth={depth}>{renderChildNodes(children)}</Heading>\n  ),\n  text: ({ node: { value } }) => `${value}`,\n  paragraph: ({ node: { children } }) => <p>{renderChildNodes(children)}</p>,\n  ruby: ({ node: { base, text } }) => (\n    <ruby>\n      {base}\n      <rt>{text}</rt>\n    </ruby>\n  ),\n  break: () => <br />,\n  table: ({ node }) => <Table node={node} renderChild={({node}) => <Tree node={node} />} />,\n  code: ({ node: { value, lang } }) => <Code language={lang} codeString={value} />,\n  inlineCode: ({ node: { value }}) => <code className={styles['inline-code']}>{value}</code>\n}\n\nconst renderChildNodes = children =>\n  children.map((node, index) => <Tree key={`${index}`} node={node} />)\n\nconst Tree = ({ node }) => {\n  if (!components[node.type]) console.log(node)\n  return components[node.type]\n    ? React.createElement(components[node.type], { node })\n    : null\n}\n\nexport default Tree\n","import unified from 'unified'\nimport parse from 'remark-parse'\nimport sectionize from 'remark-sectionize'\nimport remarkBreaks from 'remark-breaks'\nimport remarkAozoraRuby from 'remark-aozora-ruby'\n\nexport default unified()\n  .use(parse)\n  .use(remarkAozoraRuby)\n  .use(remarkBreaks)\n  .use(sectionize)\n  .freeze()\n","import React, { useState, useEffect } from 'react'\nimport Tree from './contents/Tree'\nimport processor from '../processor/markdownProcessor'\nimport styles from '../styles/Shell.module.css'\n\nconst Container = ({owner, repo, branch, filepath}) => {\n  const [raw, setRaw] = useState('')\n  const [node, setNode] = useState({})\n  useEffect(() => {\n    fetch(`https://raw.githubusercontent.com/${owner}/${repo}/${branch}/${filepath}`)\n      .then(response => response.text())\n      .then(data => setRaw(data))\n  }, [owner, repo, branch, filepath])\n  useEffect(() => {\n    processor.run(processor.parse(raw)).then(node => {\n      setNode(node)\n    })\n  }, [raw])\n  return <div className={styles.container}><Tree node={node} /></div>\n}\n\nexport default Container\n","import React from 'react'\nimport { HashRouter, Route } from 'react-router-dom'\n\nimport Header from './components/Header'\nimport TableOfContents from './components/TableOfContents'\nimport Container from './components/Container'\n\nconst owner = 'shogotsuneto'\nconst repo = 'md-contents'\nconst branch = 'master'\nconst initialPath = 'README.md'\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Header />\n      <Route\n        path='/'\n        render={({ history }) => (\n          <TableOfContents\n            owner={owner}\n            repo={repo}\n            branch={branch}\n            setCurrent={path => history.push(path)}\n          />\n        )}\n      />\n      <Route\n        path='/:filepath'\n        children={({ match }) => (\n          <Container\n            owner={owner}\n            repo={repo}\n            branch={branch}\n            filepath={match ? match.params.filepath : initialPath}\n          />\n        )}\n      />\n    </HashRouter>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading1\":\"Contents_heading1__334m9\",\"heading2\":\"Contents_heading2__1dxOo\",\"heading3\":\"Contents_heading3__2X29Z\",\"section1\":\"Contents_section1__3fcUK\",\"section2\":\"Contents_section2__263vx\",\"section3\":\"Contents_section3__yvlDa\",\"table-cell-left\":\"Contents_table-cell-left__2FA6S\",\"table-cell-center\":\"Contents_table-cell-center__3eo-Z\",\"table-cell-right\":\"Contents_table-cell-right__2UZzi\",\"codeblock-container\":\"Contents_codeblock-container__1VoiU\",\"inline-code\":\"Contents_inline-code__RaK1C\"};"],"sourceRoot":""}