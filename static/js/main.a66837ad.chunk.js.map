{"version":3,"sources":["components/Header.js","github-info.js","api/index.js","components/TableOfContents.js","components/contents/Section.js","components/contents/Heading.js","components/contents/Table.js","components/contents/Code.js","components/contents/Tree.js","processor/markdownProcessor.js","components/Container.js","App.js","serviceWorker.js","index.js","styles/Contents.module.css","styles/Shell.module.css"],"names":["Header","className","styles","header","owner","repo","branch","baseUrl","DirItem","item","onClick","isRoot","path","useState","children","setChildren","useEffect","undefined","fetch","then","response","json","fetchContentsList","data","message","renderList","tocItemList","map","renderItem","key","sha","tableOfContents","tocListItem","name","Item","console","log","tocItem","encodeURIComponent","itemRenderers","dir","props","file","type","TableOfContents","setCurrent","depth","React","createElement","components","tableRow","node","align","renderChild","isHead","index","tableCell","tag","TableComponent","Table","head","tail","child","Code","language","codeString","style","solarizedlight","root","Fragment","renderChildNodes","section","Section","heading","Heading","text","value","paragraph","ruby","base","break","table","code","lang","inlineCode","Tree","unified","use","parse","remarkAozoraRuby","remarkBreaks","sectionize","freeze","Container","filepath","raw","setRaw","setNode","isLoading","setIsLoading","fetchRawContent","decodeURIComponent","processor","run","container","active","fadeSpeed","spinner","content","margin","initialPath","githubInfo","App","render","history","push","match","params","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.a66837ad.chunk.js","sourcesContent":["import React from 'react'\nimport styles from '../styles/Shell.module.css'\n\nconst Header = () => (\n  <header className={styles.header}>アプリだよ</header>\n)\n\nexport default Header","export default {\n  owner: 'shogotsuneto',\n  repo: 'md-contents',\n  branch: 'master',\n  initialPath: 'README.md'\n}\n","import info from '../github-info'\n\nconst { owner, repo, branch } = info\nconst baseUrl = {\n  api: 'https://api.github.com',\n  raw: 'https://raw.githubusercontent.com'\n}\n\nexport const fetchRawContent =  (filepath) =>\n  fetch(`${baseUrl.raw}/${owner}/${repo}/${branch}/${filepath}`)\n    .then(response => response.text())\n\nexport const fetchContentsList = (path = undefined) => \n  fetch(`${baseUrl.api}/repos/${owner}/${repo}/contents${path ? `/${path}` : '' }?ref=${branch}`)\n    .then(response => response.json())","import React, { useState, useEffect } from 'react'\nimport styles from '../styles/Shell.module.css'\nimport { fetchContentsList } from '../api'\n\nconst DirItem = ({ item, onClick, isRoot }) => {\n  const { path } = item\n  const [children, setChildren] = useState([])\n  useEffect(() => {\n    fetchContentsList(path).then(data => setChildren(data))\n  }, [path])\n\n  // handle api error TODO: maybe catch?\n  const { message } = children\n  if (message) return message\n\n  const renderList = () => (\n    <ul className={ styles.tocItemList}>\n      {children.map(item => renderItem({ key: item.sha, item, onClick }))}\n    </ul>\n  )\n\n  return isRoot ? (\n    <div className={styles.tableOfContents}>{renderList()}</div>\n  ) : (\n    <li className={styles.tocListItem}>\n      <p>{item.name}</p>\n      {renderList()}\n    </li>\n  )\n}\n\nconst Item = ({ item, onClick }) => {\n  const { name, path } = item\n  console.log(path, item)\n  return (\n    <li\n      className={styles.tocItem}\n      onClick={() => onClick(encodeURIComponent(path))}\n    >\n      <p>{name}</p>\n    </li>\n  )\n}\n\nconst itemRenderers = {\n  dir: props => <DirItem {...props} />,\n  file: props => <Item {...props} />\n}\n\nconst renderItem = props => {\n  const { type } = props.item\n  return itemRenderers[type] ? itemRenderers[type](props) : null\n}\n\nconst TableOfContents = ({ setCurrent }) => {\n  return (\n    <DirItem\n      isRoot\n      item={{ name: 'リポ', path: null }}\n      onClick={setCurrent}\n    />\n  )\n}\n\nexport default TableOfContents\n","import React from 'react'\nimport styles from '../../styles/Contents.module.css'\n\nexport default ({depth, children}) => <section className={styles[`section${depth}`]}>{children}</section>\n","import React from 'react'\nimport styles from '../../styles/Contents.module.css'\n\nexport default ({depth, children}) => React.createElement(`h${depth}`, { className: styles[`heading${depth}`] }, children)\n","import React from 'react'\nimport styles from '../../styles/Contents.module.css'\n\nconst components = {\n  tableRow: ({ node: { children }, align, renderChild, isHead, key }) => {\n    return (\n      <tr key={key}>\n        {children.map((node, index) => (\n          <TableComponent\n            node={node}\n            align={align[index]}\n            isHead={isHead}\n            renderChild={renderChild}\n            key={`${index}`}\n          />\n        ))}\n      </tr>\n    )\n  },\n  tableCell: ({ node: { children }, align, renderChild, isHead }) => {\n    const tag = isHead ? 'th' : 'td'\n    return React.createElement(\n      tag,\n      { className: styles[`table-cell-${align}`] },\n      children.map((node, index) => (\n        <TableComponent\n          node={node}\n          renderChild={renderChild}\n          key={`${index}`}\n        />\n      ))\n    )\n  }\n}\n\nconst TableComponent = ({ node, align, isHead, renderChild }) => {\n  const { type } = node\n  return React.createElement(\n    components[type] || renderChild,\n    { node, align, isHead, renderChild }\n  )\n}\n\nconst Table = ({ node, renderChild }) => {\n  const { align, children } = node\n  const [head, ...tail] = children\n  return (\n    <table>\n      <thead>\n        <TableComponent\n          node={head}\n          isHead\n          align={align}\n          renderChild={renderChild}\n        />\n      </thead>\n      <tbody>\n        {tail.map((child, index) =>\n          <TableComponent\n            node={child}\n            align={align}\n            renderChild={renderChild}\n            key={`${index}`}\n          />\n        )}\n      </tbody>\n    </table>\n  )\n}\n\nexport default Table\n","import React from 'react'\nimport { Prism as SyntaxHighlighter} from 'react-syntax-highlighter';\nimport { solarizedlight } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nimport styles from '../../styles/Contents.module.css'\n\nconst Code = ({language, codeString}) => {\n  return (\n    <div className={styles['codeblock-container']} >\n      <SyntaxHighlighter language={language} style={solarizedlight}>\n        {codeString}\n      </SyntaxHighlighter>\n    </div>\n  );\n};\n\nexport default Code;","import React from 'react'\nimport Section from './Section'\nimport Heading from './Heading'\nimport Table from './Table'\nimport Code from './Code'\nimport styles from '../../styles/Contents.module.css';\n\nconst components = {\n  root: ({ node: { children } }) => (\n    <React.Fragment>{renderChildNodes(children)}</React.Fragment>\n  ),\n  section: ({ node: { depth, children } }) => (\n    <Section depth={depth}>{renderChildNodes(children)}</Section>\n  ),\n  heading: ({ node: { depth, children } }) => (\n    <Heading depth={depth}>{renderChildNodes(children)}</Heading>\n  ),\n  text: ({ node: { value } }) => `${value}`,\n  paragraph: ({ node: { children } }) => <p>{renderChildNodes(children)}</p>,\n  ruby: ({ node: { base, text } }) => (\n    <ruby>\n      {base}\n      <rt>{text}</rt>\n    </ruby>\n  ),\n  break: () => <br />,\n  table: ({ node }) => <Table node={node} renderChild={({node}) => <Tree node={node} />} />,\n  code: ({ node: { value, lang } }) => <Code language={lang} codeString={value} />,\n  inlineCode: ({ node: { value }}) => <code className={styles['inline-code']}>{value}</code>\n}\n\nconst renderChildNodes = children =>\n  children.map((node, index) => <Tree key={`${index}`} node={node} />)\n\nconst Tree = ({ node }) => {\n  if (!components[node.type]) console.log(node)\n  return components[node.type]\n    ? React.createElement(components[node.type], { node })\n    : null\n}\n\nexport default Tree\n","import unified from 'unified'\nimport parse from 'remark-parse'\nimport sectionize from 'remark-sectionize'\nimport remarkBreaks from 'remark-breaks'\nimport remarkAozoraRuby from 'remark-aozora-ruby'\n\nexport default unified()\n  .use(parse)\n  .use(remarkAozoraRuby)\n  .use(remarkBreaks)\n  .use(sectionize)\n  .freeze()\n","import React, { useState, useEffect } from 'react'\nimport LoadingOverlay from 'react-loading-overlay'\nimport { fetchRawContent } from '../api'\nimport Tree from './contents/Tree'\nimport processor from '../processor/markdownProcessor'\nimport styles from '../styles/Shell.module.css'\n\nconst Container = ({ filepath }) => {\n  const [raw, setRaw] = useState('')\n  const [node, setNode] = useState({})\n  const [isLoading, setIsLoading] = useState(false)\n\n  useEffect(() => {\n    setIsLoading(true)\n    fetchRawContent(decodeURIComponent(filepath)).then(data => setRaw(data))\n  }, [filepath])\n  useEffect(() => {\n    processor.run(processor.parse(raw)).then(node => {\n      setNode(node)\n      setIsLoading(false)\n    })\n  }, [raw])\n\n  return (\n    <LoadingOverlay\n      className={styles.container}\n      active={isLoading}\n      fadeSpeed={300}\n      spinner\n      text='Loading your content...'\n      styles={{\n        content: {\n          margin: '200pt auto'\n        }\n      }}\n    >\n      <Tree node={node} />\n    </LoadingOverlay>\n  )\n}\n\nexport default Container\n","import React from 'react'\nimport { HashRouter, Route } from 'react-router-dom'\n\nimport Header from './components/Header'\nimport TableOfContents from './components/TableOfContents'\nimport Container from './components/Container'\n\nimport githubInfo from './github-info'\n\nconst { initialPath } = githubInfo\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Header />\n      <Route\n        path='/'\n        render={({ history }) => (\n          <TableOfContents setCurrent={path => history.push(path)} />\n        )}\n      />\n      <Route\n        path='/:filepath'\n        children={({ match }) => (\n          <Container\n            filepath={match ? match.params.filepath : initialPath}\n          />\n        )}\n      />\n    </HashRouter>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading1\":\"Contents_heading1__334m9\",\"heading2\":\"Contents_heading2__1dxOo\",\"heading3\":\"Contents_heading3__2X29Z\",\"section1\":\"Contents_section1__3fcUK\",\"section2\":\"Contents_section2__263vx\",\"section3\":\"Contents_section3__yvlDa\",\"table-cell-left\":\"Contents_table-cell-left__2FA6S\",\"table-cell-center\":\"Contents_table-cell-center__3eo-Z\",\"table-cell-right\":\"Contents_table-cell-right__2UZzi\",\"codeblock-container\":\"Contents_codeblock-container__1VoiU\",\"inline-code\":\"Contents_inline-code__RaK1C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Shell_header__1vajR\",\"tableOfContents\":\"Shell_tableOfContents__kmQbm\",\"container\":\"Shell_container__lWg86\"};"],"sourceRoot":""}